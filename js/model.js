// Generated by CoffeeScript 1.3.3
(function() {

  window.Obj = (function() {

    Obj.prefix = "object_";

    Obj.objectByDomId = {};

    function Obj(canvas, id, left, top, width, height) {
      this.canvas = canvas;
      this.id = id;
      this.left = left;
      this.top = top;
      this.width = width;
      this.height = height;
      this.domId = 'b_' + this.canvas + '_' + Obj.prefix + this.id;
      this.createObject();
      this.size(this.width, this.height);
      this.position(this.left, this.top);
      this.rotation(0);
      Obj.objectByDomId[this.domId] = this;
    }

    Obj.prototype.wrapperSize = function() {
      return Math.round(Math.sqrt(Math.pow(this.width, 2) + Math.pow(this.height, 2)));
    };

    Obj.prototype.rePositionInWrapper = function() {
      return this.positionInWrapper((this.wrapperSize() - this.height) / 2, (this.wrapperSize() - this.width) / 2);
    };

    Obj.prototype.domObject = function() {
      return $("#" + this.domId);
    };

    Obj.prototype.createObject = function() {
      return $("#" + this.canvas).prepend('<div id="' + this.domId + '_wrapper" class="wrapper" style="">' + '<div id="' + this.domId + '" class="display_area transformable" style="' + '"><span>' + Obj.prefix + (this.id + 1) + '</span></div></div>');
    };

    Obj.prototype.color = function(color) {
      if (color) {
        this.domObject().css('background-color', color);
      }
      return this.domObject().css('background-color');
    };

    Obj.prototype.size = function(to_width, to_height) {
      if ((to_width != null) && (to_height != null)) {
        this.position(this.left - ((to_width - this.width) / 2), this.top - ((to_height - this.height) / 2));
        this.width = to_width;
        this.height = to_height;
        this.domObject().css('width', Math.round(this.width)).css('height', Math.round(this.height)).css('line-height', Math.round(this.height) + 'px');
        this.domObject().parent().css('width', this.wrapperSize()).css('height', this.wrapperSize());
      }
      return {
        width: this.width,
        height: this.height
      };
    };

    Obj.prototype.position = function(to_left, to_top) {
      if ((to_left != null) && (to_top != null)) {
        this.left = to_left;
        this.top = to_top;
        this.domObject().parent().css('left', Math.round(this.left - (this.wrapperSize() - this.width) / 2)).css('top', Math.round(this.top - (this.wrapperSize() - this.height) / 2));
        this.rePositionInWrapper();
      }
      return {
        left: this.left,
        top: this.top
      };
    };

    Obj.prototype.positionInWrapper = function(x, y) {
      return this.domObject().css('top', Math.round(x)).css('left', Math.round(y));
    };

    Obj.prototype.rotation = function(degree) {
      if (degree != null) {
        this.deg = degree;
        this.domObject().css({
          '-webkit-transform': 'rotate(' + degree + 'deg)',
          '-moz-transform': 'rotate(' + degree + 'deg)',
          '-ms-transform': 'rotate(' + degree + 'deg)',
          '-o-transform': 'rotate(' + degree + 'deg)',
          'transform': 'rotate(' + degree + 'deg)'
        });
      }
      return this.deg;
    };

    return Obj;

  })();

}).call(this);
